# Ignore personal project folders
# You don‚Äôt need 'python/' prefix in paths ‚Äî you‚Äôre already inside it (direct children of the Git root).
forNBigProject/
myFlaskWebApp/

# Ignore all png files
*.png

# Ignore Python cache
__pycache__/


# ----------------------------------------------------------------------------------------------------------------------
# üß† Step-by-step: Ignore 'temp/' folder in VSCode
# ----------------------------------------------------------------------------------------------------------------------
# ‚ú® Step 1: Open the root Git project in VSCode
#     Open the folder that contains your '.git' repository. For example, if you initialized Git inside 'VSCode/', open that folder in VSCode.
#     If you‚Äôre not sure where '.git' is initialized, run:
#       -bash----------------------------------------
#       | git rev-parse --show-toplevel             |   ‚áê D:/myCoding/VSCode/python
#       ---------------------------------------------
# 
# ‚ú® Step 2: Locate or create '.gitignore' file
#   1. Look for a file named '.gitignore' in the root of the Git project.
#   2. If it‚Äôs not there, create a new file in the same folder:
#       üî∏ Right-click ‚Üí New File ‚Üí name it '.gitignore'
# 
# ‚ú® Step 3: Add this line to '.gitignore'
#       -gitignore-----------------------------------
#       | folderA/                                  |   ‚áê To ignore folders named 'folderA' or 'folderB'. Add multiple folder paths to your '.gitignore' file ‚Äî one per line. Use '/' at the end to explicitly ignore a folder (not a file named folderA).
#       | folderB/                                  |      
#       | **/folderA/                               |   ‚áê To ignore any folder named 'folderA' or 'folderB' anywhere, if the folders are deeply nested or have a pattern.
#       | **/folderB/                               |
#       ---------------------------------------------
#     This will ignore the folder and everything inside it.
# 
# ‚ú® Step 4: Save the '.gitignore' file (Ctrl+S)
# 
# ‚ú® Step 5: If Git already tracked the folder before, remove it from index
#     If the folder 'temp/' was already committed earlier, Git will keep tracking it unless you untrack it:
#       -bash----------------------------------------
#       | git rm -r --cached temp/                  |   ‚áê To remove Tracked Files from Git (but keep them locally, without deleting from your disk).
#       ---------------------------------------------
#     Then commit the change:
#       -bash--------------------------------------------------------------------------------
#       | git commit -m "Stop tracking / Remove temp folder from tracking (now ignored)"    |   ‚áê VSCode Source Control should now stop tracking that folder and its contents.
#       -------------------------------------------------------------------------------------
#     To Confirm it‚Äôs ignored, double-check by run:
#       -bash----------------------------------------
#       | git status                                |   ‚áê You should not see anything from 'temp/'.
#       ---------------------------------------------
# 
# üõë Git will continue tracking files that were already committed before you added them to '.gitignore'.
#     So even if '.gitignore' says to ignore a folder, Git still shows them in Source Control because they're already in the index.
# ----------------------------------------------------------------------------------------------------------------------